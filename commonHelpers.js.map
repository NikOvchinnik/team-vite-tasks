{"version":3,"file":"commonHelpers.js","sources":["../src/js/refs.js","../src/js/helpers.js","../src/js/markupTasks.js","../src/js/deleteTask.js","../src/main.js"],"sourcesContent":["export default {\n  formElem: document.querySelector('#task-form'),\n  listElem: document.querySelector('#task-list'),\n};\n","function getLocalStorage(key) {\n  return JSON.parse(localStorage.getItem(key));\n}\n\nfunction setItemLocalStorage(key, data) {\n  localStorage.setItem(key, JSON.stringify(data));\n}\n\nexport { getLocalStorage, setItemLocalStorage };\n","import refs from './refs';\nconst { listElem } = refs;\n\nexport default function addMarkup(markup, id) {\n  const li = `<li id=\"${id}\">${markup}\n  <button type=\"button\">X</button>\n  </li>`;\n  listElem.insertAdjacentHTML('beforeEnd', li);\n}\n","import refs from './refs';\nimport { getLocalStorage, setItemLocalStorage } from './helpers';\nconst { listElem } = refs;\n\nlistElem.addEventListener('click', deleteTask);\n\nfunction deleteTask(e) {\n  if (e.target.nodeName !== 'BUTTON') return;\n  e.target.parentNode.remove();\n  const arr = getLocalStorage('task');\n  const filtredArr = arr.filter(item => item.id !== e.target.parentNode.id);\n  setItemLocalStorage('task', filtredArr);\n}\n","import { nanoid } from 'nanoid';\nimport refs from './js/refs';\nimport { getLocalStorage, setItemLocalStorage } from './js/helpers';\nimport addMarkup from './js/markupTasks';\nimport './js/deleteTask';\nconst { formElem, listElem } = refs;\n\nformElem.addEventListener('submit', onFormSubmit);\n// console.log(JSON.parse(localStorage.getItem('task')) || []);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  const inputValue = e.currentTarget.elements.taskName.value.trim();\n  if (!inputValue) return;\n  const id = nanoid();\n  addMarkup(inputValue, id);\n  const localArray = getLocalStorage('task') || [];\n  localArray.push({\n    text: inputValue,\n    id,\n  });\n  setItemLocalStorage('task', localArray);\n\n  e.target.reset();\n}\n\nfunction addLocalValue() {\n  const localArray = getLocalStorage('task');\n  if (localArray === null) return;\n\n  const arrayValue = localArray\n    .map(elem => {\n      return `<li id=\"${elem.id}\">${elem.text}\n      <button type=\"button\">X</button>\n      </li>`;\n    })\n    .join('');\n  listElem.insertAdjacentHTML('beforeEnd', arrayValue);\n}\n\naddLocalValue();\n"],"names":["refs","getLocalStorage","key","setItemLocalStorage","data","listElem","addMarkup","markup","id","li","deleteTask","e","filtredArr","item","formElem","onFormSubmit","inputValue","nanoid","localArray","addLocalValue","arrayValue","elem"],"mappings":"svBAAA,MAAeA,EAAA,CACb,SAAU,SAAS,cAAc,YAAY,EAC7C,SAAU,SAAS,cAAc,YAAY,CAC/C,ECHA,SAASC,EAAgBC,EAAK,CAC5B,OAAO,KAAK,MAAM,aAAa,QAAQA,CAAG,CAAC,CAC7C,CAEA,SAASC,EAAoBD,EAAKE,EAAM,CACtC,aAAa,QAAQF,EAAK,KAAK,UAAUE,CAAI,CAAC,CAChD,CCLA,KAAM,CAAEC,SAAAA,CAAU,EAAGL,EAEN,SAASM,EAAUC,EAAQC,EAAI,CAC5C,MAAMC,EAAK,WAAWD,CAAE,KAAKD,CAAM;AAAA;AAAA,SAGnCF,EAAS,mBAAmB,YAAaI,CAAE,CAC7C,CCNA,KAAM,CAAEJ,SAAAA,CAAU,EAAGL,EAErBK,EAAS,iBAAiB,QAASK,CAAU,EAE7C,SAASA,EAAWC,EAAG,CACrB,GAAIA,EAAE,OAAO,WAAa,SAAU,OACpCA,EAAE,OAAO,WAAW,SAEpB,MAAMC,EADMX,EAAgB,MAAM,EACX,OAAOY,GAAQA,EAAK,KAAOF,EAAE,OAAO,WAAW,EAAE,EACxER,EAAoB,OAAQS,CAAU,CACxC,CCPA,KAAM,CAAE,SAAAE,EAAU,SAAAT,CAAU,EAAGL,EAE/Bc,EAAS,iBAAiB,SAAUC,CAAY,EAGhD,SAASA,EAAaJ,EAAG,CACvBA,EAAE,eAAc,EAChB,MAAMK,EAAaL,EAAE,cAAc,SAAS,SAAS,MAAM,OAC3D,GAAI,CAACK,EAAY,OACjB,MAAMR,EAAKS,IACXX,EAAUU,EAAYR,CAAE,EACxB,MAAMU,EAAajB,EAAgB,MAAM,GAAK,CAAA,EAC9CiB,EAAW,KAAK,CACd,KAAMF,EACN,GAAAR,CACJ,CAAG,EACDL,EAAoB,OAAQe,CAAU,EAEtCP,EAAE,OAAO,OACX,CAEA,SAASQ,GAAgB,CACvB,MAAMD,EAAajB,EAAgB,MAAM,EACzC,GAAIiB,IAAe,KAAM,OAEzB,MAAME,EAAaF,EAChB,IAAIG,GACI,WAAWA,EAAK,EAAE,KAAKA,EAAK,IAAI;AAAA;AAAA,YAGxC,EACA,KAAK,EAAE,EACVhB,EAAS,mBAAmB,YAAae,CAAU,CACrD,CAEAD,EAAe"}