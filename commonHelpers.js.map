{"version":3,"file":"commonHelpers.js","sources":["../src/js/markupTasks.js","../src/main.js"],"sourcesContent":["import refs from './refs';\nconst { listElem } = refs;\n\nexport default function addMarkup(markup, id) {\n  const li = `<li id=\"${id}\">${markup}\n  <button type=\"button\">X</button>\n  </li>`;\n  listElem.insertAdjacentHTML('beforeEnd', li);\n}\n","import { nanoid } from 'nanoid';\nimport refs from './js/refs';\nimport { getLocalStorage, setItemLocalStorage } from './js/helpers';\nimport addMarkup from './js/markupTasks';\nimport { setEventListener } from './js/deleteTask';\nimport addLocalValue from './js/localValue';\n\nconst { formElem, listElem } = refs;\n\nformElem.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  const inputValue = e.currentTarget.elements.taskName.value.trim();\n  if (!inputValue) return;\n  const id = nanoid();\n  addMarkup(inputValue, id);\n  const localArray = getLocalStorage('task') || [];\n  localArray.push({\n    text: inputValue,\n    id,\n  });\n  setItemLocalStorage('task', localArray);\n\n  e.target.reset();\n}\n\naddLocalValue(listElem, 'task');\nsetEventListener(listElem, 'task');\n"],"names":["listElem","refs","addMarkup","markup","id","li","formElem","onFormSubmit","e","inputValue","nanoid","localArray","getLocalStorage","setItemLocalStorage","addLocalValue","setEventListener"],"mappings":"gIACA,KAAM,CAAEA,SAAAA,CAAU,EAAGC,EAEN,SAASC,EAAUC,EAAQC,EAAI,CAC5C,MAAMC,EAAK,WAAWD,CAAE,KAAKD,CAAM;AAAA;AAAA,SAGnCH,EAAS,mBAAmB,YAAaK,CAAE,CAC7C,CCDA,KAAM,CAAE,SAAAC,EAAU,SAAAN,CAAU,EAAGC,EAE/BK,EAAS,iBAAiB,SAAUC,CAAY,EAEhD,SAASA,EAAaC,EAAG,CACvBA,EAAE,eAAc,EAChB,MAAMC,EAAaD,EAAE,cAAc,SAAS,SAAS,MAAM,OAC3D,GAAI,CAACC,EAAY,OACjB,MAAML,EAAKM,IACXR,EAAUO,EAAYL,CAAE,EACxB,MAAMO,EAAaC,EAAgB,MAAM,GAAK,CAAA,EAC9CD,EAAW,KAAK,CACd,KAAMF,EACN,GAAAL,CACJ,CAAG,EACDS,EAAoB,OAAQF,CAAU,EAEtCH,EAAE,OAAO,OACX,CAEAM,EAAcd,EAAU,MAAM,EAC9Be,EAAiBf,EAAU,MAAM"}